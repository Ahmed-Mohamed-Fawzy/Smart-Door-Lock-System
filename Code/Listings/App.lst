C51 COMPILER V9.60.0.0   APP                                                               04/27/2024 20:48:37 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE APP
OBJECT MODULE PLACED IN .\Objects\App.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE App.c OMF2 OPTIMIZE(8,SPEED) BROWSE DEBUG PRINT(.\Listings\App.lst) TABS
                    -(2) OBJECT(.\Objects\App.obj)

line level    source

   1          /***********************************************************************
   2          *                                                                      *           
   3          * File Name: App.c                                                     *
   4          *                                                                      *
   5          * Subject: the application source file contains the flow of code       *             
   6          *                                                                      *   
   7          * Date: 15-4-2024                                                      *
   8          *                                                                      *
   9          * Created By: Group 1 -> Embedded System Course                        *                       
  10          *                                                                      *
  11          ***********************************************************************/
  12          
  13          #include <reg51.h>
  14          #include <lcd.h>
  15          #include <keypad.h>
  16          #include <servo.h>
  17          #include <uart.h>
  18          #include <IR_sensor.h>
  19          #include <buzzer.h>
  20          #include <leds_and_buttons.h>
  21          #include <delay.h>
  22          
  23          /****************************************************
  24          *                 Global Variables                  *
  25          ****************************************************/
  26          
  27          /* The pointer to char_ act as array of char_ (string) for the saved pass */
  28          const unsigned char  saved_pass[5] = {'1','2','2','1','\0'};
  29          /* The array that store the current password the user enterd */
  30          unsigned char entered_pass[5];
  31          /* The flag used for check if the flag is true or not */
  32          unsigned char correct_pass_flag = 0;
  33          /* This flag needed for checking if the re-enterd password correct or not */
  34          unsigned char reEnter_pass_flag = 0;
  35          /* This counter indicats to limitation of password entering times */
  36          unsigned char num_ofCorrect_Password = 3;
  37          
  38          /****************************************************
  39          *              Functions Prototypes                 *
  40          ****************************************************/
  41          /***********************************************************************
  42          *                                                                      *
  43          * Function Name: receive_PasswordfromUser                              *
  44          *                                                                      *
  45          * Behaviour: the function used for getting the password from the user  *
  46          *            and store it in the entered_pass array.                   *
  47          *                                                                      *
  48          * Input Paramter: void                                                 *
  49          *                                                                      *
  50          * Output Paramter: void                                                *
  51          *                                                                      *
  52          ***********************************************************************/
  53          void receive_PasswordfromUser(void);
  54          
C51 COMPILER V9.60.0.0   APP                                                               04/27/2024 20:48:37 PAGE 2   

  55          /***********************************************************************
  56          *                                                                      *
  57          * Function Name: password_isCorrect                                    *
  58          *                                                                      *
  59          * Behaviour: the function used for checking if the password get from   *
  60          *            the user is true or not acorrding to saved pass.          *
  61          *                                                                      *
  62          * Input Paramter: void                                                 *
  63          *                                                                      *
  64          * Output Paramter: void                                                *
  65          *                                                                      *
  66          ***********************************************************************/
  67          void password_isCorrect(void);
  68          
  69          /***********************************************************************
  70          *                                                                      *
  71          * Function Name: password_isCorrect                                    *
  72          *                                                                      *
  73          * Behaviour: the function used for checking if the password get from   *
  74          *            the user is true or not acorrding to saved pass.          *
  75          *                                                                      *
  76          * Input Paramter: void                                                 *
  77          *                                                                      *
  78          * Output Paramter: void                                                *
  79          *                                                                      *
  80          ***********************************************************************/
  81          void servoMotor_Action(void);
  82          
  83          /***********************************************************************
  84          *                                                                      *
  85          * Function Name: LCD_homeScreen                                        *
  86          *                                                                      *
  87          * Behaviour: the function used for displaying the home screen          *
  88          *                                                                      *
  89          * Input Paramter: void                                                 *
  90          *                                                                      *
  91          * Output Paramter: void                                                *
  92          *                                                                      *
  93          ***********************************************************************/
  94          void LCD_homeScreen(void);
  95          
  96          void main ()
  97          { 
  98   1        /* Local var for reading sensor value */
  99   1        unsigned char IR_Read; 
 100   1        /* Init LCD to be able to display */
 101   1        LCD_init();
 102   1        /* Prepare timer 1 to start */
 103   1        Timer0_Start();
 104   1        /* Init Servo at inital angle */
 105   1        SERVO_init();
 106   1        /* Init uart for serial communication */
 107   1        uart_Init();
 108   1        /* Put the initial state of buzzer is off */
 109   1        BUZZER_status(BUZZER_OFF);
 110   1        /* Put the initial state of red led is off */
 111   1        RED_ledStatus(LED_OFF);
 112   1        /* Put the initial state of yellow led is off */
 113   1        YELLOW_ledStatus(LED_OFF);
 114   1        /* Put the initial state of green led is off */
 115   1        GREEN_ledStatus(LED_OFF);
 116   1        /* Function to display the home screen */
C51 COMPILER V9.60.0.0   APP                                                               04/27/2024 20:48:37 PAGE 3   

 117   1        LCD_homeScreen();
 118   1        
 119   1        for(;;){
 120   2            /* Store the read of teh sensor in this variable and check on it */
 121   2          IR_Read = IR_readStatus();
 122   2        
 123   2          if( IR_Read == IR_DETECT )
 124   2          {
 125   3          /* If sensor detect there is a person it will change screen to password screen */
 126   3          LCD_clearScreen();  
 127   3          LCD_displayString("Enter Password:");
 128   3          LCD_moveCursor(1,0);
 129   3            
 130   3          /* Call this function for receiving password */
 131   3          receive_PasswordfromUser();
 132   3          password_isCorrect();
 133   3          
 134   3          /* Check on the password was matched to saved password */
 135   3          if( correct_pass_flag == 0)
 136   3          {
 137   4            /* Make sure that the counter still contains it is value if the user enters matched password */
 138   4            num_ofCorrect_Password = 3;
 139   4            /* Function for making the servo motor rotate */
 140   4            servoMotor_Action();
 141   4            /* Send to internal system 'S' as Start your System */
 142   4            uart_Sendbyte('S');
 143   4            delayms(1000);
 144   4            }
 145   3          else
 146   3          {
 147   4            /* Decrement the counter by 1 due to the wrong password */
 148   4            num_ofCorrect_Password--;
 149   4            /* This case means that the useer enter the wrong password */
 150   4            RED_ledStatus(LED_ON);
 151   4            /* Enter this loop if the password is not true*/
 152   4            while( num_ofCorrect_Password != 0 )
 153   4            {
 154   5            
 155   5            LCD_clearScreen();
 156   5            
 157   5            LCD_moveCursor(0,4);
 158   5            LCD_displayString("Wrong");
 159   5            LCD_moveCursor(1,3);
 160   5            LCD_displayString("Password");
 161   5            delayms(150);
 162   5            
 163   5            RED_ledStatus(LED_OFF);
 164   5            YELLOW_ledStatus(LED_ON);
 165   5            
 166   5            LCD_clearScreen();
 167   5            LCD_displayString("Enter Password:");
 168   5            LCD_moveCursor(1,0);
 169   5            
 170   5            receive_PasswordfromUser();
 171   5            password_isCorrect();
 172   5            
 173   5            if( correct_pass_flag == 1)
 174   5            {
 175   6              num_ofCorrect_Password--;
 176   6            }
 177   5            else if( correct_pass_flag == 0)
 178   5            {
C51 COMPILER V9.60.0.0   APP                                                               04/27/2024 20:48:37 PAGE 4   

 179   6              reEnter_pass_flag = 1;
 180   6              num_ofCorrect_Password = 3;
 181   6              break;
 182   6            }
 183   5            else
 184   5            {
 185   6              /* Do No Thing */
 186   6            }    
 187   5            }//End of While
 188   4          }//End of else if the password is not true
 189   3      
 190   3          if(reEnter_pass_flag == 1 )
 191   3          {
 192   4            /* Reset the flag to be able to enter here again */
 193   4            reEnter_pass_flag = 0;
 194   4            /* Turn off the yellow led and turn on green led means password is correct */
 195   4            YELLOW_ledStatus(LED_OFF);
 196   4            /* Function for making the servo motor rotate */
 197   4            servoMotor_Action();
 198   4            /* After finishing return to the home page */
 199   4            LCD_homeScreen();
 200   4            /* Send to internal system 'S' as Start your features */
 201   4            uart_Sendbyte('S');
 202   4            delayms(1000);
 203   4          }
 204   3            /* 
 205   3             * If the user enter the password wrong for 3 times 
 206   3             * the program should stuck here to indicate that is 
 207   3             * an error happen.
 208   3             *
 209   3             * NOTE: If the program reach here the real user should 
 210   3             *       restart the system again, and reset the password.
 211   3             */
 212   3            while(num_ofCorrect_Password == 0)
 213   3            {
 214   4              RED_ledStatus(LED_ON);
 215   4              YELLOW_ledStatus(LED_ON);
 216   4              GREEN_ledStatus(LED_ON);
 217   4              BUZZER_status(BUZZER_ON);
 218   4            }
 219   3          }
 220   2          else
 221   2          {
 222   3            LCD_homeScreen();
 223   3          }//End of IR sesnor check condition
 224   2          
 225   2        }//End of main infinte loop
 226   1        
 227   1        
 228   1      }//End of Main
 229          
 230          
 231          /****************************************************
 232          *             Some Needed Functions                 *
 233          ****************************************************/
 234          
 235          void receive_PasswordfromUser(void)
 236          {
 237   1        unsigned char i;
 238   1        
 239   1        for( i = 0; i < 4; i++)
 240   1        {
C51 COMPILER V9.60.0.0   APP                                                               04/27/2024 20:48:37 PAGE 5   

 241   2          entered_pass[i] = 0;
 242   2        }
 243   1        
 244   1        for( i = 0; i < 4; i++)
 245   1        {   
 246   2          entered_pass[i] = KEYPAD_getPressedKey();
 247   2              
 248   2          if(entered_pass[i] >= '0' && entered_pass[i]<= '9')
 249   2          {
 250   3            LCD_displayCharacter(entered_pass[i]);
 251   3            delayms(50);  
 252   3          }
 253   2          else
 254   2          {
 255   3            i--;
 256   3          }
 257   2          delayms(50);    
 258   2        }
 259   1      
 260   1        while(KEYPAD_getPressedKey()!= '#');
 261   1      }
 262          
 263          
 264          void password_isCorrect(void)
 265          {
 266   1        unsigned char i;
 267   1        
 268   1        correct_pass_flag = 0;
 269   1        
 270   1        for( i = 0; i < 4 ; i++ )
 271   1          {
 272   2            if(entered_pass[i] != saved_pass[i])// 1331 != 1221
 273   2            {
 274   3              /* if the password not true the flag will rise */
 275   3               correct_pass_flag = 1;
 276   3            }
 277   2          }
 278   1          
 279   1      }
 280          
 281          void servoMotor_Action(void)
 282          {
 283   1            /* Make sure that the counter still contains it is value if the user enters matched password */
 284   1            num_ofCorrect_Password = 3;
 285   1            /* This case means that the useer enter the correct password */
 286   1            GREEN_ledStatus(LED_ON);
 287   1            LCD_clearScreen();
 288   1            delayms(50);
 289   1            
 290   1            /* Dispaly that the door is opened and open the door */
 291   1           LCD_moveCursor(0,6);
 292   1           LCD_displayString("Door");
 293   1           LCD_moveCursor(1,4);
 294   1           LCD_displayString("is Opened");
 295   1        
 296   1           SERVO_rotateDegree(0XF8,0X30);
 297   1           delayms(500);
 298   1           SERVO_rotateDegree(0XFA,0X24);
 299   1           delayms(1500);
 300   1           
 301   1           /* Dispaly tehat the door is closed and close the door */
 302   1           LCD_clearScreen();
C51 COMPILER V9.60.0.0   APP                                                               04/27/2024 20:48:37 PAGE 6   

 303   1           LCD_moveCursor(0,6);
 304   1           LCD_displayString("Door");
 305   1           LCD_moveCursor(1,4);
 306   1           LCD_displayString("is Closed");
 307   1           
 308   1           SERVO_rotateDegree(0xFC,0X2C);
 309   1           delayms(500);
 310   1           SERVO_rotateDegree(0XFA,0X24);
 311   1           delayms(500);
 312   1           
 313   1           /*Finally, turn off the green led because the door was closed*/
 314   1           GREEN_ledStatus(LED_OFF);
 315   1           
 316   1           LCD_clearScreen();
 317   1      }
 318          
 319          void LCD_homeScreen(void)
 320          {
 321   1            LCD_moveCursor(0,4);
 322   1            LCD_displayString("Welcome -_-");
 323   1            LCD_moveCursor(1,0);
 324   1            LCD_displayString("Security Boot x");
 325   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    584    ----
   CONSTANT SIZE    =     84    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     13       1
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
